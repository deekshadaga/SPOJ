#include<bits/stdc++.h>
using namespace std;
typedef long long ll; 

vector<int> rabin_karp(string s, string t) {
	    int p = 31; 
	   	int m = 1000000009;
	    int S = s.size();
	    int T = t.size();
	    vector<long long> p_pow(max(S, T)); 
	    p_pow[0] = 1;
	    for (int i = 1; i < (int)p_pow.size(); i++) 
	        p_pow[i] = (p_pow[i-1] * p) % m;
	    vector<long long> h(T + 1, 0); 
	    for (int i = 0; i < T; i++)
	        h[i+1] = (h[i] + (t[i] - 'a' + 1) * p_pow[i]) % m; 
	    long long h_s = 0;
	    for (int i = 0; i < S; i++) 
	        h_s = (h_s + (s[i] - 'a' + 1) * p_pow[i]) % m; 
	    vector<int> occurences;
	    for (int i = 0; i + S - 1 < T; i++) { 
	        long long cur_h = (h[i+S] + m - h[i]) % m; 
	        if (cur_h == h_s * p_pow[i] % m)
	            occurences.push_back(i);
	    }
    return occurences;
}
int main(){
#ifndef ONLINE_JUDGE
	freopen("input","r",stdin);
	freopen("output","w",stdout);
#endif
	int t;
	scanf("%d",&t);
	while(t--){
	//int n;
	//while(cin >> n){
		//int n;
		//cin >> n;
		string s,t;
		cin >> t >> s;
		vector<int> ans=rabin_karp(s,t);
		if(ans.size()==0) cout << "Not Found" << endl;
		else{
			cout << ans.size()<<endl; 
			for(int i=0;i<ans.size();i++){
				cout << ans[i]+1 << " ";
			}
			cout << endl;
		}
		cout << endl;
	}
	return 0;
}
